/*
 * NEW: oper {}
 * OLD: O:Line
 * Defines an IRC Operator
 * IRC operators are there to keep sanity to the server and usually keep it
 * maintained and connected to the network.
 * The syntax is as follows:
 *
 * oper <name> {
 *       from {
 *               userhost <hostmask>;
 *               userhost <hostmask>;
 *       };
 *       password <password> { <auth-type>; };
 *       class <class-name>;
 *       flags <flags>;
 *
 *       flags {
 *               <flag>;
 *               <flag>;
 *               ...
 *       };
 *       swhois <whois info>;
 *       snomask <snomask>;
 *       modes <modes>;
 *       maxlogins <num>;
 * };
 */

/* For a list of oper flags, see doc/unreal32docs.html#operblock
 * [HIGHLY recommended to read]
*/




# The way to do this would be to use Unreal's MKPASSWD command. This command can be used while connected 
# as /mkpasswd or on *nix as ./unreal mkpasswd. The syntax for tis command is:
# mkpasswd <auth-type> <password>
#
# Unreal supports the following auth-types: crypt, md5, sha1, ripemd-160. 
# This command would give you a result, which is the hashed version of that password. 
# When you have the result from the command, enter the password in the oper block like this:
#
#  password <result> { <auth-type>; };
#
#  EXAMPLE:
#
#    If my password was "password" and I wanted it to be hashed with sha1, I would type:
#    /quote mkpasswd sha1 password
#
#    Which would give me:
#    *** Authentication phrase (method=sha1, para=password) is: $6L/ybC6i$S8/+1SAx96FcbatLyHzoYJHxxCw=
#
#    Then I would put it in my oper block as:
#    password "$6L/ybC6i$S8/+1SAx96FcbatLyHzoYJHxxCw=" { sha1; };
#
#    I would then be able to oper:
#     /oper login password 
#
#    NOTE: It will be different every time you run it! Don't worry, this is because the hashes are salted 
#          so they are different each time. It is still the same password. 



oper cmsv {

        class           clients;
        from {
		userhost something@*;
		userhost anything@ip;
                userhost something@127.0.0.1;
                userhost something@192.168.1.*;
        };

	# must change the password
        password "$6L/ybC6i$S8/+1SAx96FcbatLyHzoYJHxxCw=" { sha1; }; 

        flags
        {
                netadmin;
		global;
                can_die;
                can_restart;
                can_zline;
                can_gkline;
                can_gzline;
                get_umodew;
                get_host;
                can_override;
        };
		swhois  "Network Administrator";
                snomask cFfkejvGnNqsSoJ;
		maxlogins 1;
};

# notes: flag J = notice on join/part opers

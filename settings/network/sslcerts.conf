	/* SSL Certificates */

	set {
		ssl {
	
	/* Specifies that EGD (Entropy Gathering Daemon) support should be enabled. If you run OpenSSL 0.9.7  */
        /* or higher, then /var/run/egd-pool, /dev/egd-pool, /etc/egd-pool, and /etc/entropy will be searched */
        /* by default so no filename is necessary, you may simply specify set::ssl::egd with no value. If you */
        /* are using a version of OpenSSL prior to 0.9.7 or you want to use a EGD socket located somewhere    */
        /* other than the above listed locations you may specify the filename of the UNIX Domain Socket that  */
        /* hat an EGD is listening on                                                                         */
        /* set::ssl::egd <filename>; */


        /* Specifies the filename where the server's SSL certificate is located */
        /* set::ssl::certificate <filename>;                                    */
	certificate     "/home/ircd/unreal/server.cert.pem";


        /* Specifies the filename where the server's SSL private key is located */
        /* set::ssl::key <filename>;                                            */
	key             "/home/ircd/unreal/server.key.pem";


        /* Specifies the filename where the certificates of the trusted CAs are located */
        /* set::ssl::trusted-ca-file <filename>;                                        */
        /* trusted-ca-file "curl-ca-bundle.crt"; */
	trusted-ca-file	"/home/ircd/unreal/curl-ca-bundle.crt";


	/* Specifies which ciphers to be allowed, by default we leave this up to OpenSSL. */
        /* See http://www.openssl.org/docs/apps/ciphers.html on how to */
        #set::ssl::server-cipher-list <cipherlist>;
	#server-cipher-list "DHE-RSA:AES256-SHA";

        /* Specifies after how many bytes an SSL session should be renegotiated (eg: 20m for 20 megabytes). */
        #set::ssl::renegotiate-bytes <value>;

        /* Specifies after how much time an SSL session should be renegotiated (eg: 1h for 1 hour).*/
        #set::ssl::renegotiate-timeout <timevalue>;#


        /* Forces clients that do not have a certificate to be denied */
        #set::ssl::options::fail-if-no-clientcert;

        /* Disallows connections from people with self-signed certificates */
        #set::ssl::options::no-self-signed;

        /* makes Unreal determine if the SSL certificate is valid before allowing connection */
        #set::ssl::options::verify-certificate;

	/* Disable STARTTLS. STARTTLS allows clients to use SSL on regular (non-SSL) ports. */
	#set::ssl::options::no-starttls;

	  };
	};

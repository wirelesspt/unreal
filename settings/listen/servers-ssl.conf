/*
 * NEW: listen {}
 * OLD: P:Line
 * This defines a port for the ircd to bind to, to
 * allow users/servers to connect to the server.
 * Syntax is as follows:
 * listen (ip number):(port number)
 * {
 *   options {
 *     (options here);
 *   };
 * };
 * or for a plain
 * listen: listen (ip):(port);
 *
 * NOTICE: for ipv6 ips (3ffe:b80:2:51d::2 etc), use listen [ip]:port;
 *
 * That works also.
 */

/* Options for listen:
 *       OLD     |       NEW
 *       S               serversonly
 *       C               clientsonly
 *       J               java
 *       s               ssl
 *       *               standard
 */

/* NOTE ON SSL PORTS: SSL ports are pretty non-standardized,
 * besides numerous high-SSL ports, some people say you should run
 * it at 994 because that's the official SSL port.. but that
 * requires root! Besides, port 194 is the official irc port and
 * have you ever seen an ircd running on that?
 * So, our suggestion is to use port 6697 for SSL, this is used by
 * quite some networks and is recognized by for example StunTour.
 * You are free to open up as many SSL ports as you want, but
 * by (also) using 6697 you help the world standardize a bit ;).
 */

/* NOTE: If you are on an IRCd shell with multiple IP's you are
 *       likely to get 'Address already in use' errors in your log
 *       and the ircd won't start. This means you MUST bind
 *       to a specific IP instead of '*', so for example:
 *       listen 1.2.3.4:6667;
 *       Obviously, replace the IP with the IP that was assigned to you.
 *
 * Currently, if you have compiled with IPv6 support, and you need to put IPv4
 * addresses in a special way at some places.In your listen blocks, Instead of using
 * listen 192.168.0.1:6667 you need to use
 * listen [::ffff:192.168.0.1]:6667
 */

listen          *:6690 {
        options {
                ssl;
                serversonly;
        };
};

